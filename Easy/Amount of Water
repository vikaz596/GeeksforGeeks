/**
* created by VIKAS SINGH
* on 4 MAR 2016
* For problem statement visit geeksforgeeks.com under Easy problem section with same name
*/

import java.util.Scanner;

public class GFG {
	
	public static long calculateWaterAmount(int arr[], int n) {
		int left[] = new int[n];
		
		int right[] = new int[n];

		int water = 0;

		left[0] = arr[0];
		for (int i = 1; i < n; i++)
			left[i] = Math.max(left[i-1], arr[i]);

		right[n-1] = arr[n-1];
		for (int i = n-2; i >= 0; i--)
			right[i] = Math.max(right[i+1], arr[i]);

	
		for (int i = 0; i < n; i++)
		water += Math.min(left[i],right[i]) - arr[i];

		return water;
	}
	
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		int testCases = stdin.nextInt();
		for(int t=0 ; t<testCases ; t++) {
			int n = stdin.nextInt();
			int heights[] = new int[n];
			
			for(int i=0 ; i<n ; i++)
				heights[i] = stdin.nextInt();
			
			System.out.println(calculateWaterAmount(heights,n));
		}	
		stdin.close();
	}
}
