/**
* created by VIKAS SINGH
* on 3 MAR 2016
* For problem statement visit geeksforgeeks.com under Easy problem section with same name
*/

import java.io.BufferedReader;
import java.io.InputStreamReader;

class GFG {
	
	public static int mergeSort(String s1[], String s2[], int n) {
		int i=0;
		int j=0;
		int count=0;
		int a=0;
		int b=0;
		for( ; i<n && j<n ; ) {
			count++;
			if(Integer.parseInt(s1[i])<=Integer.parseInt(s2[j])) {
				if(count==n) 
					a = Integer.parseInt(s1[i]);
				
				if(count==n+1) {
					b = Integer.parseInt(s1[i]);
					return (a+b);
				}
				++i;	
			}
			else if(Integer.parseInt(s1[i])>Integer.parseInt(s2[j])) {
				if(count==n) 
					a = Integer.parseInt(s2[j]);
				
				if(count==n+1) {
					b = Integer.parseInt(s2[j]);
					return (a+b);
				}
				++j;
			}
		}
		if(i==n)
			return (a + Integer.parseInt(s2[j]));
		
		else
			return (a + Integer.parseInt(s1[i]));
		
	}
	
	public static void main (String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int testCases = Integer.parseInt(br.readLine().trim());
		for(int t=0 ; t<testCases ; t++) {
		    int n = Integer.parseInt(br.readLine().trim());  
			String str = br.readLine().trim();
			String s1[] = str.split(" ");
			str = br.readLine().trim();	
			String s2[] = str.split(" ");
			
			System.out.println(mergeSort(s1,s2,n));
			
		}
		
		br.close();
	}
}
