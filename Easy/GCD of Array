/**
* created by VIKAS SINGH
* on 3 MAR 2016
* For problem statement visit geeksforgeeks.com under Easy problem section with same name
*/

import java.io.BufferedReader;
import java.io.InputStreamReader;

class GFG {
	
	public static int findGCD(int arr[] , int low , int high) {
		if(low==high)
			return arr[low];
		
		if(low+1 == high) {
			int a = arr[low];
			int b = arr[high];
			return gcd(a,b);
		}
		
		else if(low<high) {
			int mid = (low+high)/2;
			return gcd(findGCD(arr,low,mid),findGCD(arr,mid+1,high));
		}

		return 1;	
	}
	
	private static int gcd(int x, int y) {		
	    int r=0;
		int a=0;
		int b=0;
		
        a = (x > y) ? x : y; // a is greater number
        b = (x < y) ? x : y; // b is smaller number
 
        r = b;
        while(a % b != 0) {
            r = a % b;
            a = b;
            b = r;
        }
        return r;
	}
	
	public static void main(String args[]) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int testCases = Integer.parseInt(br.readLine().trim());
		for(int t=0 ; t<testCases ; t++) {
			
			int n = Integer.parseInt(br.readLine().trim());
			String str = br.readLine().trim();
			String s[] = str.split(" ");
			int arr[] = new int[n];
			for(int i=0 ; i<n ; i++)
				arr[i] = Integer.parseInt(s[i]);
			
			int ans = findGCD(arr,0,n-1);
			
			System.out.println(ans);
		}		
		br.close();
    }
}
