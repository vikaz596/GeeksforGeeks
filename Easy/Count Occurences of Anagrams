/**
* created by VIKAS SINGH
* on 3 MAR 2016
* For problem statement visit geeksforgeeks.com under Easy problem section with same name
*/

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;

class GFG {

	public static void match(String s, String p) {
		List<Integer> list = new ArrayList<Integer>();
		int[] count = new int[256];
		for (char c : p.toCharArray())
			count[c]++;
		int[] tc = new int[256];
		for (int i = 0; i < p.length(); i++) {
			tc[s.charAt(i)]++;
		}

		if (matchCount(count, tc))
			list.add(0);

		for (int i = p.length(); i < s.length(); i++) {
			tc[s.charAt(i - p.length())]--;
			tc[s.charAt(i)]++;
			if (matchCount(count, tc))
				list.add(i - p.length() + 1);
		}
		
		System.out.println(list.size());
	}

	private static boolean matchCount(int[] a, int[] b) {
		for (int i = 0; i < a.length; i++)
			if (a[i] != b[i])
				return false;
		return true;
	}
	
	public static void main (String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int testCases = Integer.parseInt(br.readLine().trim());
		for(int t=0 ; t<testCases ; t++) {
			String s1 = br.readLine().trim();
			String s2 = br.readLine().trim();
			match(s1,s2);
		}
		
		br.close();
	}
}
