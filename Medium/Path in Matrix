/**
* created by VIKAS SINGH
* on 4 MAR 2016
* For problem statement visit geeksforgeeks.com under Medium problem section with same name
*/

import java.io.InputStreamReader;
import java.util.Scanner;

public class Solution {
	
	public static int getMaxRatedPath(int arr[][], int n) {
		int dp[][] = new int[n][n];
		
		for(int i=0 ; i<n ; i++)
			dp[0][i] = arr[0][i];
		
		for(int i=1 ; i<n ; i++) {
			for(int j=0 ; j<n ; j++) {
				if(j==0)
					dp[i][j] = arr[i][j] + Math.max(dp[i-1][j],dp[i-1][j+1]);
				
				else if(j==n-1)
					dp[i][j] = arr[i][j] + Math.max(dp[i-1][j],dp[i-1][j-1]);
				
				else
					dp[i][j] = arr[i][j] + Math.max(dp[i-1][j],(Math.max(dp[i-1][j-1],dp[i-1][j+1])));
			}
		}
		
		int ans = dp[n-1][0];
		for(int i=1 ; i<n ; i++)
			if(ans<dp[n-1][i])
				ans = dp[n-1][i];
			
			
		return ans;	
	}
	
    public static void main(String[] args){
        Scanner stdin = new Scanner(new InputStreamReader(System.in));
		int testCases = stdin.nextInt();
		for(int t=0 ; t<testCases ; t++) {
			int n = stdin.nextInt();
			int arr[][] = new int[n][n];
			
			for(int i=0 ; i<n ; i++)
				for(int j=0 ; j<n ; j++)
					arr[i][j] = stdin.nextInt();
			
			System.out.println(getMaxRatedPath(arr,n));

		}
		stdin.close();
	}
}	
