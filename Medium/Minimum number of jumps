/**
* created by VIKAS SINGH
* on 4 MAR 2016
* For problem statement visit geeksforgeeks.com under Medium problem section with same name
*/

import java.util.Scanner;
import java.util.Arrays;

public class Solution {
	
	public static long minJump(int arr[], int n) {
		long dp[] = new long[n];
		Arrays.fill(dp,-1);
		dp[0] = 0;  // min jumps to reach index 0 of array we are already at destination
		
		for(int i=1 ; i<=n-1 ; i++) {
			for(int j=0 ; j<i ; j++) {
				if((j+arr[j])-i>=0 && dp[j]!=-1) {
					if(dp[i]==-1)
						dp[i] = dp[j] + 1;
					
					else if(dp[i]>dp[j]+1)
						dp[i] = dp[j] + 1;
				}
			}
		}
		
		/*for(int i=0 ; i<n ; i++)
			System.out.print(dp[i] + " ");
		
		System.out.println("");*/
		
		return dp[n-1];
	}
	
	public static void main (String[] args) {
		Scanner stdin = new Scanner(System.in);
		int testCases = stdin.nextInt();
		for(int t=0 ; t<testCases ; t++) {
			int n = stdin.nextInt();
			int arr[] = new int[n];
			
			for(int i=0 ; i<n ; i++)
				arr[i] = stdin.nextInt();
			
			System.out.println(minJump(arr,n));
		}
		
		stdin.close();
	}
}
