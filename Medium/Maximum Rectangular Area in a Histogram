/**
* created by VIKAS SINGH
* on 4 MAR 2016
* For problem statement visit geeksforgeeks.com under Medium problem section with same name
*/

import java.io.InputStreamReader;
import java.util.Scanner;

public class Solution {

	public static int getMaxArea(int arr[]) {
		// i am thinking of tackling this problem with dp and moving forward with a thinking that
		// calculate area with 1 bar then with 2 bar then with 3.....till n bar
		// dp[1] contains max area using 1 bar etc.....
		
		int n = arr.length;
		int dp[] = new int[n+1];
		
		dp[0] = 0;
		int overAllMax = Integer.MIN_VALUE;  // this will contain ans, max area till all the bars we have seen
		int max = Integer.MIN_VALUE;		 // this will help in determining max area of particular number of bars in array
		
		for(int i=1 ; i<=n ; i++) {
			for(int j=0 ; j<=(n-i) ; ++j) {
				int k=j;
				int temp = arr[k];			// Since max area for using 3 bars is min(3 bars) * 3
				while(k<j+i) {
					if(temp>arr[k])
						temp = arr[k];
					
					k++;
				}	
				if(max<(temp*i))	// check if this area found is more than max area for same number of bars
					max = temp*i;
			}
			dp[i] = max;	// set max area taking i bars at a time
			if(dp[i]>overAllMax)   // set overAllMax Area
				overAllMax = dp[i];
			
			max = 0;  // reset max as now we will see max of taking i+1 bars at a time
		}
		
		/*for(int i=0 ; i<=n ; i++)
			System.out.print(dp[i] + " ");
		
		System.out.println("");*/
		
		return overAllMax;
	}
	
    public static void main(String[] args){
        Scanner stdin = new Scanner(new InputStreamReader(System.in));
		int testCases = stdin.nextInt();
		for(int t=0 ; t<testCases ; t++) {

			int n = stdin.nextInt();
			int arr[] = new int[n];
			
			for(int i=0 ; i<n ; i++)
				arr[i] = stdin.nextInt();
			
			System.out.println(getMaxArea(arr));
		}
		stdin.close();
	}
}	
